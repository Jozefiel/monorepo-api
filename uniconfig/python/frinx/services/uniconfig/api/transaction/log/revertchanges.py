# generated by datamodel-codegen:
#   filename:  uniconfigV3.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel
from pydantic import Field

from ...frinx import types


class TargetTransactions(BaseModel):
    class Config:
        allow_population_by_field_name = True

    transaction: Optional[list[str]] = None


class Input(BaseModel):
    class Config:
        allow_population_by_field_name = True

    ignore_non_existing_nodes: Optional[bool] = Field(
        None, alias='ignore-non-existing-nodes'
    )
    """
    Controls whether to ignore non-existing target uniconfig nodes. By default, if the
    target-uuids-fields contains a transaction id for a non-existing node, then RPC fails.
    """
    target_transactions: Optional[TargetTransactions] = Field(
        None,
        alias='target-transactions',
        title='transaction.log.targetuuidsfields.TargetTransactions',
    )


class ResultItem(BaseModel):
    class Config:
        allow_population_by_field_name = True

    transaction_id: Optional[str] = Field(None, alias='transaction-id')
    """
    Transaction identifier.
    """
    error_type: Optional[types.ErrorType] = Field(None, alias='error-type')
    error_message: Optional[str] = Field(None, alias='error-message')
    """
    Error message describing cause of error.
    """
    status: Optional[types.OperationResultType] = None


class RevertOutput(BaseModel):
    class Config:
        allow_population_by_field_name = True

    result: Optional[list[ResultItem]] = None
    """
    Result of reverted changes.
    """


class Output(BaseModel):
    class Config:
        allow_population_by_field_name = True

    error_message: Optional[str] = Field(None, alias='error-message')
    """
    Error message that describe overall problem.
    """
    revert_output: Optional[RevertOutput] = Field(
        None,
        alias='revert-output',
        title='transaction.log.revertoutputfields.RevertOutput',
    )
    """
    Results of reverted changes.
    """
    overall_status: types.OperationResultType = Field(..., alias='overall-status')
