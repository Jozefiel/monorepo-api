# generated by datamodel-codegen:
#   filename:  uniconfigV3.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel
from pydantic import Field


class KeyCredentialItem(BaseModel):
    class Config:
        allow_population_by_field_name = True

    passphrase: Optional[str] = None
    """
    If the provided key is encrypted by a passphrase this needs to be included. Leave empty
    if the key does not have a passphrase.
    DO NOT write this directly into the datastore, use the provided rpc's as these will
    encrypt the passhprase before the entry is written into the datastore.
    """
    key_id: Optional[str] = Field(None, alias='key-id')
    private_key: Optional[str] = Field(None, alias='private-key')
    """
    Base64 encoded private key that should be used for authentication with a netconf device.
    Do not include a public key as that is calculated from the private key.
    DO NOT write this directly into the datastore, use the provided rpc's as these will
    encrypt the key before the entry is written into the datastore.
    """


class Input(BaseModel):
    class Config:
        allow_population_by_field_name = True

    key_credential: Optional[list[KeyCredentialItem]] = Field(
        None, alias='key-credential'
    )
