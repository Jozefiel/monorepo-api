name: Publish Frinx Services API

on:
  push:
    branches:
      - master

jobs:
  changes:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    outputs:
      python-api-packages: ${{ steps.python.outputs.changes }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: python
        with:
          filters: |
            inventory/python:
              - 'inventory/python/RELEASE.md'
            resource-manager/python:
              - 'resource-manager/python/RELEASE.md'
            schellar/python:
              - 'schellar/python/RELEASE.md'
            topology-discovery/python:
              - 'topology-discovery/python/RELEASE.md'
            uniconfig/python:
              - 'uniconfig/python/RELEASE.md'

  build-n-publish-pypi:
    needs: changes
    if: ${{ needs.changes.outputs.python-api-packages != '[]' && needs.changes.outputs.python-api-packages != '' }}
    strategy:
      fail-fast: true
      matrix:
        package: ${{ fromJSON(needs.changes.outputs.python-api-packages) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.4.2"
      - name: poetry publish
        run: |
          cd ${{ matrix.package }}
          echo "PACKAGE_TAG=$(poetry version | sed 's| |_v|g')" >> "$GITHUB_ENV"
          echo "DOCKER_TAG=$(cat RELEASE.md | grep "$(poetry version --short)" | cut -d '|' -f 2)" >> "$GITHUB_ENV"
          poetry publish --build --dry-run  # -u "__token__" -p "${{ secrets.PYPI_TOKEN }}"
      - uses: rickstaa/action-create-tag@v1
        id: tag_create
        with:
          tag: ${{ env.PACKAGE_TAG }}
          tag_exists_error: false
          message: Release of ${{ env.PACKAGE_TAG }} for image with tag ${{ env.DOCKER_TAG }}